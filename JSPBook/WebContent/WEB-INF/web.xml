<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>JSPBook</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <!-- 사용자가 요청한 페이지가 없으면 404 오류가 발생하여 
  		오류 페이지 /errorCode_404.jsp URL을 요청
   -->
  <error-page>
  	<!-- error-code : 오류 코드 설정 -->
  	<error-code>404</error-code>
  	<!-- location: 오류 코드가 발생 시 오류 페이지의 URL로 요청 -->
  	<location>/errorCode_404.jsp</location>
  </error-page> 
  <!-- 10/0과 같이 잘못된 코드를 실행 시 500오류가 발생하여 오류 페이지 errorCode_500.jsp를 요청함 -->
  <error-page>
  	<!-- error-code : 오류 코드 설정 -->
  	<error-code>500</error-code>
  	<!-- location: 오류 코드가 발생 시 오류 페이지의 URL로 요청 -->
  	<location>/errorCode_500.jsp</location>
  </error-page>
  <!-- 예외 유형 처리 -->
  	<error-page>
  		<exception-type>java.lang.NullPointerException</exception-type>
  		<location>/errorNullPointer.jsp</location>
  	</error-page>
  <!-- Filter01과 Filter 인터페이스를 구현한 자바 클래스인 AuthenFileter를 연결해줌 -->
  <filter>
  	<filter-name>filter01</filter-name>
  	<filter-class>ch12.AuthenFilter</filter-class>
  </filter>
  <!-- url-pattern의 URL을 요청 시 이 필터가 작동함 -->
  <filter-mapping>
  	<filter-name>filter01</filter-name>
  	<url-pattern>/ch12/filter01_process.jsp</url-pattern>
  </filter-mapping>
  
  <!-- filter02_process.jsp URL을 요청 시 InitParamFilter.java를 filter로 연결해줌 -->
<!--   <filter> -->
<!--   	<filter-name>filter02</filter-name> -->
<!--   	<filter-class>ch12.InitParamFilter</filter-class> -->
<!--   	<init-param> -->
<!--   		<param-name>param1</param-name> -->
<!--   		<param-value>admin</param-value> -->
<!--   	</init-param> -->
<!--   	<init-param> -->
<!--   		<param-name>param2</param-name> -->
<!--   		<param-value>1234</param-value> -->
<!--   	</init-param> -->
<!--   </filter> -->
<!--   <filter-mapping> -->
<!--   	<filter-name>filter02</filter-name> -->
<!--   	<url-pattern>/ch12/filter02_process.jsp</url-pattern> -->
<!--   </filter-mapping> -->
  
  <!-- LoginCheckFilter -->
 <filter>
		<filter-name>loginFilter</filter-name>
		<filter-class>ch12.LoginCheckFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>/ch12/loginForm_success.jsp</url-pattern>
	</filter-mapping>
	<!-- Filter 인터페이스를 구현 할 LogFileFilter 클래스 설정 -->
	<filter>
		<filter-name>Filter02_2</filter-name>
		<filter-class>ch12.LogFileFilter</filter-class>
		<!-- log를 남길 파일명을 초기화 파라미터로 던짐 -->
		<init-param>
			<param-name>filename</param-name>
			<param-value>c:\\logs\\monitor.log</param-value>
		</init-param>
	</filter>
	<!-- filter02_process.jsp를 요청 시 LogFileFilter를 실행 후 처리-->
	<filter-mapping>
		<filter-name>Filter02_2</filter-name>
		<url-pattern>/ch12/filter02_process.jsp</url-pattern>		
	</filter-mapping>
	
	<!-- 모든 URI 요청 처리 전에 LogFilter를 먼저 실행  -->
	<filter>
		<filter-name>LogFilter</filter-name>
		<filter-class>ch12.LogFilter</filter-class>
	<init-param>
			<param-name>filename</param-name>
			<param-value>c:\\logs\\bookmarket.log</param-value>
	</init-param>
	</filter>
	<filter-mapping>
		<filter-name>LogFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 세션 유효 시간 설정(1. web.xml에서 설정. 2.jsp에서 설정 -->
	<session-config>
		<!-- 단위 : 분. 기본 30분 -->
		<session-timeout>1</session-timeout>
	</session-config>
</web-app>